[{"title":"hexo + yilia 搭建博客问题汇总","date":"2019-12-17T13:56:05.000Z","path":"2019/12/17/20191217/","text":"2019.12.12更新 今天给博客添加了网易云音乐功能，解决了“点击‘所有文章/关于我’会出现空页面about:blank#blocked ”的问题。 只需要在下面对应文档添加：“ target = “_parent” ”： 在搭建过程中遇到了各式各样的小问题，用一篇文章记录一下解决的方法，定期更新。","tags":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://kuuuo.github.io/tags/hexo%E5%8D%9A%E5%AE%A2/"}]},{"title":"hexo+yilia相册搭建","date":"2019-12-16T14:07:28.000Z","path":"2019/12/16/20191216/","text":"用yilia主题搭建相册遇到了很多问题，弄了好多天也没有解决，今天晚上，终于成功了！ 首先附上链接： https://tding.top/archives/9a232bbe.html 主要流程如下： 十七、添加相册1、创建可以点击链接如果想单独创建一个可以单击的链接，方法是相同的，首先进入您的博客目录执行 复制 1hexo new page photos 立即在 source 下生成 photos/index.md 文件，这里 index.md 需要删除。 然后在主题站点的配置文件 theme/yilia/_config.yml 中添加点击的文案和跳转到位置： 复制 1menu: 2主页: &#x2F; 3分类: &#x2F;categories 4归档: &#x2F;archives 5相册: &#x2F;photos&#x2F;index.html 2、拷贝他人的 photos 内容可以参考别人做好的博客 , 下载 source/photos 下的所有文件，拷贝到你对应的位置。 一般只需要修改 ins.js 文件的 render() 函数。这个函数式用来渲染数据的，里面配置了展示图片的链接地址，图片具体操作见下面。这里主要就修改 minSrc、Src 两个变量，改成自己的照片缩略图、照片的链接。 复制 1var render &#x3D; function render(res) 2&#123; var ulTmpl &#x3D; &quot;&quot;; 3for (var j &#x3D; 0, len2 &#x3D; res.list.length; j &lt; len2; j++) &#123; var data &#x3D; res.list[j].arr; var liTmpl &#x3D; &quot;&quot;; for (var i &#x3D; 0, len &#x3D; data.link.length; i &lt; len; i++) &#123; var minSrc &#x3D; &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;dta0502&#x2F;BlogPhotos&#x2F;master&#x2F;min_photos&#x2F;&#39; + data.link[i]; var src &#x3D; &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;dta0502&#x2F;BlogPhotos&#x2F;master&#x2F;photos&#x2F;&#39; + data.link[i]; var type &#x3D; data.type[i]; var target &#x3D; src + (type &#x3D;&#x3D;&#x3D; &#39;video&#39; ? &#39;.mp4&#39; : &#39;.jpg&#39;); src +&#x3D; &#39;&#39;; 3、图片放置1）图片命名格式最前面是日期，然后用_进行分隔，后面是图片的描述信息，注意不要包含_和. 符号。 举例来说： 复制 12018-10-05_西湖文化广场.jpg 2）图片放置目录然后在 Hexo 根目录下创建 photos 和 min_photos 文件夹，然后把图片原图放置到 photos 文件夹下，后面会用 Python 脚本对这个原图进行压缩处理，自动生成一个缩略图在 min_photos 文件夹下。 4、处理图片并引入图片1）Python 脚本处理图片接下来就是最后一步，也是最重要的一步了，使用 Python 写的脚本，生成一套大图和一套小图，随即生成 json 文件，这个文件保存在 source/photos/data.json 中。 脚本下载地址：BlogPhotos 这里需要下载两个.py 脚本（ImageProcess.py、tool.py），其中 ImageProcess.py 是 tool.py 这个脚本用到的。 然后执行 tool.py 脚本即可生成一套大图和一套小图，并且在 source/photos/ 下生成这个 json 文件。 2）上传图片到 Github然后我把 photos 和 min_photos 文件夹全部上传到 Github 上，然后得到了原图和缩略图的链接，这个链接就是 ins.js 文件的 render() 函数中需要修改的链接。 每次更新图片，都需要重新执行以下 Python 脚本，并且将图片上传到 GitHub 上。 5、测试是否成功复制 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 以上部分是链接里讲述的方法，我在搭建过程中遇到了另一个问题，就是hexo本地文件不能部署到GitHub上，错误如下： Please make sure you have the correct access rightsand the repository exists.FATAL Something’s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlError: Spawn failed at ChildProcess. (D:\\Kuuuo\\Hexo\\node_modules\\hexo-util\\lib\\spawn.js:51:21) at ChildProcess.emit (events.js:210:5) at ChildProcess.cp.emit (D:\\Kuuuo\\Hexo\\node_modules\\cross-spawn\\lib\\enoent.js:34:29) at Process.ChildProcess._handle.onexit (internal/child_process.js:272:12) 这里再附上一篇解决方法： https://blog.csdn.net/u014702999/article/details/72783140 出现这个问题是因为没有在github账号添加SSH key 解决方法如下： 1.在终端输入。 ssh-keygen -t rsa -C “username” (注：username为你git上的用户名) 如果执行成功。返回 Generating public/private rsa key pair. Enter file in which to save the key (/Users/username/.ssh/id_rsa): Generating public/private rsa key pair.Enter file in which to save the key (/Users/username/.ssh/id_rsa): 首先，说明一下，这里的username是你电脑上的用户名 然后，在这里就是设置存储地址了.我们直接按回车，会出现一下两种情况的一种： （1）如果正常运行的话，会出现 Enter passphrase (empty for no passphrase): 然后我们直接回车 （2）有的时候我们可能会出现 /Users/your username/.ssh/id_rsa already exists. Overwrite (y/n)? 这说明你已经设置了存储地址，我们输入“y”覆盖 Overwrite (y/n)? y 回车 上面的任意两种情况之后，会出现 Enter same passphrase again: 再次回车，这时候你会看见： Your identification has been saved in /Users/username/.ssh/id_rsa. Your public key has been saved in /Users/username/.ssh/id_rsa.pub. The key fingerprint is: 58:42:8b:58:ad:4b:b5:b9:6d:79:bf:8c:f9:e2:2b:ed username The key’s randomart image is: +–[ RSA 2048]—-+ | … | | o oo. | | . .ooo. | | o o+ | | . ..oS. | | . . + . | | . o . | | . o+. | | +E++. | +—————–+ 这说明SSH key就已经生成了。文件目录就是：/Users/username/.ssh/id_rsa.pub. 我们执行cat命令查看文件的内容： cat /User/username/.ssh/id_rsa.pub 这时候会看见： ssh-rsa AAAAB3NzaC1yc2。。。。。。。。。 后面的内容我省略了 (说明：ssh-rsa 后面的内容这就是你的SSH keys) 把显示出来的SSH keys直接添加到github账户设置里边的SSH keys 最后就会成功显示！ 解决了一个很久没有解决的问题~ 都是用的别人的方法，以后还是以记录自己的学习和生活为主。","tags":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://kuuuo.github.io/tags/hexo%E5%8D%9A%E5%AE%A2/"}]},{"title":"我的第一篇博客","date":"2019-11-28T13:37:27.274Z","path":"2019/11/28/我的第一篇博客/","text":"2019年11月27日下午开始想搭建自己的博客，于是在经过一天半的“捣鼓”，Kuuuo的博客上线了。 在搭建过程中，见到了各种各样的程序员博客，有些只是技术分享，有些会有自己的生活记录（带文艺风的程序员简直不要太酷），于我而言，建这个博客的初衷就是给自己一个独立的空间，记录自己的生活和成长，记录自己最真实的想法。 这个博客，只关于我，无关他人。 我不确定自己以后会不会成为一名程序员，但此时的我希望自己能将这个博客好好用下去，功能会慢慢完善，一点一点来。 好了，开始博客之旅！","tags":[]},{"title":"Hello World","date":"2019-11-27T12:36:57.713Z","path":"2019/11/27/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]